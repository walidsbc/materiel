<?php

namespace SBCPlatformBundle\Repository;

use SBCPlatformBundle\Entity\Deplacement;

/**
 * MaterielRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MaterielRepository extends \Doctrine\ORM\EntityRepository
{

    public function getMateriels()
    {
        $query = $this->createQueryBuilder('m')
            ->leftJoin('m.fournisseur', 'f')
            ->addSelect('f')

            ->orderBy('m.buydate', 'DESC')
            ->getQuery();

        return $query
            ->getResult();
    }

    public function getMateriel($id)
    {

        $query = $this->createQueryBuilder('m')
//           ->addSelect('m')
            ->leftJoin('m.files', 'fil')
            ->addSelect('fil')
            ->leftJoin('m.fournisseur', 'f')
            ->addSelect('f')
            ->leftJoin('m.planifications', 'ty')
            ->addSelect('ty')
            ->leftJoin('ty.natureintervention', 'na')
            ->addSelect('na')
            ->where('m.id = ?1')
            ->setParameters(array(1 => $id));


        return $query->getQuery()->getOneOrNullResult();
    }

    function find($id, $lockMode = null, $lockVersion = null)
    {

        $query = $this->createQueryBuilder('m')
//           ->addSelect('m')
            ->leftJoin('m.files', 'fil')
            ->addSelect('fil')
            ->leftJoin('m.fournisseur', 'f')
            ->addSelect('f')
            ->leftJoin('m.planifications', 'ty')
            ->addSelect('ty')
            ->leftJoin('ty.natureintervention', 'na')
            ->addSelect('na')
            ->where('m.id = ?1')
            ->setParameters(array(1 => $id));


        return $query->getQuery()->getOneOrNullResult();
    }

    /**
     * Search material by reg
     * @param $reg
     * @return array
     */
    public function findByRegWithJoinDeplacement($reg)
    {
        $qb2 = $this->createQueryBuilder('m');
        $qb2
            ->select('m')
            ->leftJoin('m.deplacements', 'd')
            ->where('d.arriveddate is null')
            ->andWhere("d.status = 'En départ'")
            ->andWhere('d.cancelled = false')
            ->andWhere('d.cancellable = true ');


        $qb = $this->createQueryBuilder('a');


        return
            $qb->where(
                $qb->expr()->like('a.name', ':name')
            )
                ->setParameter('name', '%' . $reg . '%')
                ->andWhere(
                    $qb->expr()->notIn(
                        'a', $qb2->getDQL()
                    )
                )
                ->andWhere('a.activated = true')
                ->getQuery()
                ->getResult();


    }


    /**
     * Search material by reg
     * @param $reg
     * @return array
     */
    public function findByRegNotExistInDeplacement($reg)
    {


        $qb2 = $this->createQueryBuilder('m');
        $qb2
            ->select('m')
            ->leftJoin('m.deplacements', 'd')
            ->where("(d.status is null) or ( d.arriveddate is null and d.status = 'En départ' and d.cancelled = false and d.cancellable = true )");


        $qb = $this->createQueryBuilder('a');


        return
            $qb->where(
                $qb->expr()->like('a.name', ':name')
            )
                ->setParameter('name', '%' . $reg . '%')
                ->andWhere(
                    $qb->expr()->notIn(
                        'a', $qb2->getDQL()
                    )
                )
                ->andWhere('a.activated = true')
                ->getQuery()
                ->getResult();


    }

    /**
     * @param $reg
     * @return array
     */
    public function allWithDeplcements($reg)
    {
        $qb2 = $this->createQueryBuilder('m')->select('m');
        $qb2
            ->leftJoin('m.deplacements', 'd')
            ->addSelect('d')
            ->leftJoin('d.destinatedlocation', 'loc')
            ->addSelect('loc')
            ->where( $qb2->expr()->like('m.name', ':reg'))
            ->andWhere('m.activated = true')
            ->andWhere('d.cancelled = ?1')
            ->orWhere('d.cancelled is null')
            ->setParameters(array(1 => false))
            ->setParameter('reg', '%'.$reg.'%')

           ;

        return $qb2->getQuery()->getArrayResult();


    }

}
