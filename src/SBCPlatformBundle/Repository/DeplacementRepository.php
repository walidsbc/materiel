<?php

namespace SBCPlatformBundle\Repository;

/**
 * DeplacementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DeplacementRepository extends \Doctrine\ORM\EntityRepository
{

    public function getDeplacements($cancelled)
    {

        $query = $this->createQueryBuilder('d')
            ->leftJoin('d.materiel', 'm')
            ->addSelect('m')
            ->leftJoin('d.transmitter', 'o')
            ->addSelect('o')
            ->leftJoin('d.deliveredby', 'oo')
            ->addSelect('oo')
            ->leftJoin('d.deliverer', 'ooo')
            ->addSelect('ooo')
            ->leftJoin('d.receiver', 'oooo')
            ->addSelect('oooo')
            ->leftJoin('d.currentlocation', 'emp')
            ->addSelect('emp')
            ->leftJoin('d.destinatedlocation', 'empla')
            ->addSelect('empla')
            ->orderBy('d.arriveddate', 'ASC')
            ->where('d.cancelled = ?1')
            ->setParameters(array(1 => $cancelled))
            ->getQuery();

        return $query->getResult();
    }

    public function getDeplacement($id)
    {

        $query = $this->createQueryBuilder('d')
            ->leftJoin('d.materiel', 'm')
            ->addSelect('m')
            ->leftJoin('m.fournisseur', 'fourn')
            ->addSelect('fourn')
            ->leftJoin('d.transmitter', 'o')
            ->addSelect('o')
            ->leftJoin('d.deliveredby', 'oo')
            ->addSelect('oo')
            ->leftJoin('d.deliverer', 'ooo')
            ->addSelect('ooo')
            ->leftJoin('d.receiver', 'oooo')
            ->addSelect('oooo')
            ->leftJoin('d.currentlocation', 'emp')
            ->addSelect('emp')
            ->leftJoin('d.destinatedlocation', 'empla')
            ->addSelect('empla')
            ->where('d.id = ?1')
            ->getQuery();
        $query->setParameters(array(1 => $id));

        return $query->getOneOrNullResult();
    }

    public function generateReference()
    {

        $query = $this->createQueryBuilder('d')
            ->leftJoin('d.materiel', 'm')
            ->addSelect('m')
            ->leftJoin('d.transmitter', 'o')
            ->addSelect('o')
            ->leftJoin('d.deliveredby', 'oo')
            ->addSelect('oo')
            ->leftJoin('d.deliverer', 'ooo')
            ->addSelect('ooo')
            ->leftJoin('d.receiver', 'oooo')
            ->addSelect('oooo')
            ->leftJoin('d.currentlocation', 'emp')
            ->addSelect('emp')
            ->leftJoin('d.destinatedlocation', 'empla')
            ->addSelect('empla')
            ->orderBy('d.id', 'DESC')
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();

        if ($query == null) {
            $reference[0] = 'TRS';
            $reference[1] = 1;

            return implode("-", $reference);
        }


        $reference = explode("-", $query->getReference());
        $reference[1] = intval($reference[1]) + 1;

        return implode("-", $reference);

    }


    public function getDepalcementEnDepartParReference($reference)
    {

        $query = $this->createQueryBuilder('d')
            ->leftJoin('d.materiel', 'm')
            ->addSelect('m')
            ->leftJoin('d.transmitter', 'o')
            ->addSelect('o')
            ->leftJoin('d.deliveredby', 'oo')
            ->addSelect('oo')
            ->leftJoin('d.deliverer', 'ooo')
            ->addSelect('ooo')
            ->leftJoin('d.receiver', 'oooo')
            ->addSelect('oooo')
            ->leftJoin('d.currentlocation', 'emp')
            ->addSelect('emp')
            ->leftJoin('d.destinatedlocation', 'empla')
            ->addSelect('empla')
            ->where('d.reference = ?1 and d.status = ?2')
            ->setParameters(array(1 => $reference, 2 => "En dÃ©part"))
            ->getQuery();

        return $query->getOneOrNullResult();
    }


    /**
     * Search last deplacement by reg
     * @param $reg
     * @return array
     */
    public function getLastDeplacementOfMateriel($materiel, $status)
    {
        $query = $this->createQueryBuilder('d')
            ->leftJoin('d.materiel', 'm')
            ->addSelect('m')
            ->leftJoin('d.transmitter', 'o')
            ->addSelect('o')
            ->leftJoin('d.deliveredby', 'oo')
            ->addSelect('oo')
            ->leftJoin('d.deliverer', 'ooo')
            ->addSelect('ooo')
            ->leftJoin('d.receiver', 'oooo')
            ->addSelect('oooo')
            ->leftJoin('d.currentlocation', 'emp')
            ->addSelect('emp')
            ->leftJoin('d.destinatedlocation', 'empla')
            ->addSelect('empla')
            ->where('d.materiel = ?1')
            ->andWhere('d.cancelled = ?2')
            ->andWhere('d.status = ?3')
            ->setParameters(
                array(1 => $materiel, 2 => false, 3 => $status)

            )
            ->orderBy('d.id', 'DESC')
            ->setMaxResults(1)
            ->getQuery();


        return $query->getOneOrNullResult();
    }


}
