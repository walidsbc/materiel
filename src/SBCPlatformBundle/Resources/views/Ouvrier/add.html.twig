{% extends "::layout.html.twig" %}
{% block css %}
    {{ parent() }}
{% endblock %}
{% block title %}
    Ajouter un ouvrier - {{ parent() }}
{% endblock %}
{% block body %}
    <div id="page_heading" data-uk-sticky="{ top: 48, media: 960 }">
        <h1>Formulaire d'ajout de l'ouvrier</h1>
        <span class="uk-text-muted uk-text-upper uk-text-small">veuillez bien remplir les champs</span>
    </div>
    {{ include("SBCPlatformBundle:Ouvrier:form.html.twig") }}
{% endblock %}
{% block js %}
    {{ parent() }}
    <script>
        altair_forms.parsley_validation_config();
    </script>
    {% javascripts output="js/compiled/main_Mask.js"
    'bundles/sbcplatform/bower_components/parsleyjs/dist/parsley.min.js'
    'bundles/sbcplatform/assets/js/pages/forms_validation.min.js'
    'bundles/sbcplatform/jQuery-Mask-Plugin/js/jquery.mask.min.js'
     %}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}
    <script>
        $(function ($) {
            $('#sbcplatformbundle_ouvrier_cin').mask('00 00 00 00');
            $('#sbcplatformbundle_ouvrier_phonenumber').mask('00 000 000');
        });
        $('#sbcplatformbundle_ouvrier_code').on('change', function () {
            $code = $('#sbcplatformbundle_ouvrier_code').val();
            var url = '{{ path('ouvrier_bycode', {'code': 'codE'}) }}';
            url = url.replace('codE', $code);
            $.ajax({
                async: true,
                type: "GET",
                url: url,
                success: function (json) {
                    console.log(JSON.stringify(json));
                    if (json.success == true) {
                        // declancher une exeption
                        window.Parsley.addValidator('code', {
                            validateString: function (value) {
                                return false;
                            },
                            messages: {
                                en: 'This code name already exists',
                                fr: "This code name already exists."
                            }
                        });

                    }else{
                        window.Parsley.addValidator('code', {
                            validateString: function (value) {
                                return true;
                            }
                        });
                    }
                    $('#sbcplatformbundle_ouvrier_code').parsley().validate();
                }
            });
        });
        $('#sbcplatformbundle_ouvrier_cin').on('change', function () {
            $cin = $('#sbcplatformbundle_ouvrier_cin').val();
            var url = '{{ path('ouvrier_bycin', {'cin': 'ciN'}) }}';
            url = url.replace('ciN', $cin);
            $.ajax({
                async: true,
                type: "GET",
                url: url,
                success: function (json) {
                    console.log(JSON.stringify(json));
                    if (json.success == true) {
                        // declancher une exeption
                        window.Parsley.addValidator('cin', {
                            validateString: function (value) {
                                return false;
                            },
                            messages: {
                                en: 'This cin already exists',
                                fr: "This cin already exists."
                            }
                        });
                    }else{
                        window.Parsley.addValidator('cin', {
                            validateString: function (value) {
                                return true;
                            }
                        });
                    }
                    $('#sbcplatformbundle_ouvrier_cin').parsley().validate();
                }
            });
        });
        $('#sbcplatformbundle_ouvrier_phonenumber').on('change', function () {
            $phonenumber = $('#sbcplatformbundle_ouvrier_phonenumber').val();
            var url = '{{ path('ouvrier_byphonenumber', {'phonenumber': 'phoneNumber'}) }}';
            url = url.replace('phoneNumber', $phonenumber);
            $.ajax({
                async: true,
                type: "GET",
                url: url,
                success: function (json) {
                    console.log(JSON.stringify(json));
                    if (json.success == true) {
                        // declancher une exeption
                        window.Parsley.addValidator('phonenumber', {
                            validateString: function (value) {
                                return false;
                            },
                            messages: {
                                en: 'This phonenumber already exists',
                                fr: "This phonenumber already exists."
                            }
                        });

                    }else{
                        window.Parsley.addValidator('cin', {
                            validateString: function (value) {
                                return true;
                            }
                        });
                    }
                    $('#sbcplatformbundle_ouvrier_phonenumber').parsley().validate();
                }
            });
        });
    </script>
{% endblock %} 