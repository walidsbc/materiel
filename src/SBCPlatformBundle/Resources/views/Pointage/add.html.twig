{% extends "::layout.html.twig" %}
{% block css %}
    {{ parent() }}
{% endblock %}
{% block title %}
    Ajouter un pointage - {{ parent() }}
{% endblock %}
{% block body %}
    <div id="page_heading" data-uk-sticky="{ top: 48, media: 960 }">
        <h1>Formulaire d'ajout du pointage</h1>
        <span class="uk-text-muted uk-text-upper uk-text-small">veuillez bien remplir les champs</span>
    </div>
    {{ include("SBCPlatformBundle:Pointage:form.html.twig") }}
{% endblock %}
{% block js %}
    {{ parent() }}
    <script>
        altair_forms.parsley_validation_config();
    </script>
    {% javascripts output="js/compiled/mainValidation.js"
    'bundles/sbcplatform/bower_components/parsleyjs/dist/parsley.min.js'
    'bundles/sbcplatform/assets/js/pages/forms_validation.min.js' %}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}
    <script>
        $(function () {
            var emplacement = $('#sbcplatformbundle_pointage_emplacement');
            emplacement.prop('readonly', true);
            var materielSelected = $('#sbcplatformbundle_pointage_materiel');
            var lifetimeremaining = $('#lifetimeremaining');

            materielSelected.on('change', function () {
                var val = $(this).val(); // on récupère la valeur
                if (val !== '') {
                    lifetimeremaining.empty(); // on vide la liste
                    $.ajax({
                        async: true,
                        type: "GET",
                        data: 'q=' + val,
                        url: "{{ path('deplacement_lastdestinatedlocationofmateriel') }}",
                        success: function (json) {

                            lifetimeremaining.html("Il reste " + json.remainniglifetime + " Heure(s)");
                            remainniglifetime = json.remainniglifetime;
                            lifetimeremaining.trigger("change");
                            lifetimeremaining.prop('readonly', true);
                            emplacement.html("<option value='" + json.id + "'>" + json.text + "</option>");
                            emplacement.trigger("change");
                            emplacement.prop('readonly', true);

                        },
                        error: function (b, a) {
                            alert('Error: ' + a); //---si la connexion au serveur n'est pas effectuée avec succès
                        }
                    });
                }
            });

//            $usedduration = $('#sbcplatformbundle_pointage_usedduration').val();
//            if ($usedduration > $remainniglifetime) {
//                // declancher une exeption
//                window.Parsley.addValidator('usedduration', {
//                    validateString: function (value) {
//                        return false;
//                    },
//                    messages: {
//                        en: 'usedduration must be less then currentlocation',
//                        fr: "usedduration must be less then currentlocation."
//                    }
//                });
//
//            }else{
//                window.Parsley.addValidator('destinatedlocation', {
//                    validateString: function (value) {
//                        return true;
//                    }
//                });
//            }
//            $('#sbcplatformbundle_pointage_usedduration').parsley().validate();


        });
    </script>
{% endblock %} 